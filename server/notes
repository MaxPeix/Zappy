A server, created in C, that generates the inhabitants’ world.

The server is executed in the form of one, single process and one, single thread.

In order for a player to recognize their team, the client sends the look command. The server will respond
with the character string, as follows.
look
[ player , object - on - tile1 , ... , object - on - tileP ,...]

it must use select to handle socket multiplexing; the select must unlock only if something happen on a
socket or if an event is ready to be executed. (See strace)

The team name GRAPHIC is reserved for the GUI to authenticate itself as such to the server.

In case of a bad/unknown command, the server must answer “ko”

he client can send up to 10 requests in a row without any response from the server.
Over 10, the server will no longer take them into account.
The server executes the client’s requests in the order they were received.
The requests are buffered and a command’s execution time only blocks the player in question

9. INVENTORY
This command allows you to see what object the drone has and how much time it has left to live.
The server will send a line similar to the following one:
[ food 345 , sibur 3 , phiras 5 , ... , deraumere 0]\ n

10. BROADCAST
To emit a message, the client must send the following command to the server:
Broadcast text \ n
The server will then send the following line to all of its clients:
message K , text \ n
where K is the tile where the sound is coming from.

11. EJECTION
A player can eject all other players from a shared unit of terrain by pushing them in the direction it is looking.
When a client send the eject command to the server, all of the clients that are sharing the tile will receive
the following line:
eject : K \ n
where K is the direction of the tile where the pushed player is coming from.
When a player eject all other being from the unit of terrain it also destroy any eggs layed on that unit
